---

- name: determine latest version
  tags: unzip
  shell: curl -s "{{ peer_version_url }}" | jq -r .tag_name 
  args:
    warn: no
  register: last_version
  when: peer_version is not defined or peer_version is none

- name: set version variable
  tags: unzip
  set_fact:
    peer_version: '{{ last_version.stdout }}'
  when: peer_version is not defined or peer_version is none

- name: Debug version variable
  tags: unzip
  debug:
    var: peer_version

## As per install doc, we have to use some gymnastic with zip file
- name: download and extract archive
  tags: unzip
  unarchive:
    creates: "{{ app_user_home }}/versions/peertube-{{ peer_version }}"
    dest: "{{ app_user_home }}/versions/"
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    remote_src: yes
    src: "{{ peer_src_url }}"
    
- name: create link to latest
  tags: unzip
  file:
    state: link
    src: "{{ directory_version }}"
    dest: "{{ directory_latest }}"

- name: ensure all belongs to {{ app_user }}
  tags: install
  file:
    state: directory 
    recurse: yes
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    follow: yes
    path: "{{ directory_latest }}"

- name: install peertube
  tags: install
  become: true
  become_user: "{{ app_user }}"
  shell: cd "{{ directory_latest }}" && yarn install "{{ yarn_options }}"

- name: Installation is finished, configuration is left to the user
  tags: install
  pause:
    prompt: |2
        Installation complete!

        Please not that 'certbot' was NOT installed (not required if you are using a reverse proxy for your web apps).

        Next is to set up a minimum working configuration..."
  tags: info
