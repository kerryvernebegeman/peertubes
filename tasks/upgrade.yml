---

- name: Fetch package.json file
  fetch:
    dest: remote
    src: "{{directory_latest }}/package.json"

- name: Get version
  include_vars:
    file: "remote/{{ inventory_hostname }}/{{directory_latest }}/package.json"
    name: peertube_package

- name: determine latest version
  shell: curl -s "{{ peer_version_url }}" | jq -r .tag_name 
  args:
    warn: no
  register: last_version
  when: peer_version is not defined or peer_version is none

- name: set last version variable
  set_fact:
    peer_version: '{{ last_version.stdout | regex_replace( "v(.*)","\1")  }}'
  when: peer_version is not defined or peer_version is none

- name: Ask user for upgrade
  pause:
    prompt: |
      .
      .
      .
      . You're version - {{ peertube_package.version }}
      . Last version   - {{ peer_version }}
      .
      . Do you want to continue to upgrade ? (y/n)
      .
  register: user_choice
  when: peertube_package.version != peer_version

- name: Stop
  meta: end_play
  when: user_choice is not defined and user_choice.stdout is not defined or user_choice.stdout in ["y","Y","o","O","Yes","yes"]


- name: Pause
  pause:
    prompt: Pause, Everything Ok ?

